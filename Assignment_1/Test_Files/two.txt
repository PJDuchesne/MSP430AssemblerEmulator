;
; Two-operand arithmetic		
; Test of two-operand instruction -- not all work
; 5 May 17
; Caveat emptor
;
; MOV - Move source to destination		
	mov	r0,r10
	mov	r5,Array(r7)
	mov	Data,r10
	mov	&Data,Data
	mov	 @r7,Array(R6)
	mov	 @R5,@r5
	mov	 @R10+
	mov	#1,Array()
	mov.w	r0,r10
	mov.w	r5,Array(r7)
	mov.w	Data,r10
	mov.w	&Data,Data
	m0v.w	 Array(R6),@R7
	mov.w	 @R5,@r5+
	moo.w	 @R17+,Data
	mov.w	#8,Array(r7)
	mov.b	r0,r20
	mov.x	r5+,Array(r7)
	mov.b	Data+,r10
	mov.b	&Data,Data2
	mov.b	 Array(R6),@R7
	miv.b	 @R5,@r5+
	mov.b	 @R17+,Data
	mov.b	#8,Array(r7)
; ADD - Add source to destination		
	ADD	r0,r10
	ADD	r5,Array(r7)
	ADD	Data,r10
	ADD	&Data,Data
	ADD	 @r7,Array(R6)
	Adx	 @R5,@r5
	ADD	 @R10+
	ADD	#1,Array()
	ADD.w	r0,r10
	ADD.w	r5,Array(r7)
	ADD.w	Data,r10
	ADD.w	&Data,Data
	ADD.w	 Array(R6),@R7
	ADD.w	 @R5,@r5+
	ADD.w	 @R17+,Data
	ADD.w	#8,Array(r7)
	ADD.b	r0,r20
	ADD.b	r5+,Array(r7)
	ADDi.b	Data+,r10
	ADD.b	&Data,Data2
	ADD.b	 Array(R6),@R7
	ADD.b	 @R5,@r5+
	ADD.b	 @R17+,Data
	ADD.b	#8,Array(r7)
ADDC - Add source and carry to destination		
	Addc	r0,r10
	Addc	r5,Array(r7)
	Addc	Data,r10
	Addc	&Data,Data
	Addc	 @r7,Array(R6)
	Addc	 @R5,@r5
	Addc.wx	 @R10+
	Addc	#1,Array()
	Addc.w	r0,r10
	Addc.w	r5,Array(r7)
	Addc.w	Data,r10
	Addc.w	&Data,Data
	Addc.w	 Array(R6),@R7
	Addc.w	 @R5,@r5+
	Addc.w	 @R17+,Data
	Addc.w	#8,Array(r7)
	Addc.b	r0,r20
	Addc.b	r5+,Array(r7)
	Addc.b	Data+,r10
	Addo.b	&Data,Data2
	Addc.b	 Array(R6),@R7
	Addc.b	 @R5,@r5+
	Addc.b	 @R17+,Data
	Addc.b	#8,Array(r7)
SUBC - Subtract source from destination (with carry)		
	SBC	r0,r10
	SBC	r5,Array(r7)
	SBC	Data,r10
	SBC	&Data,Data
	SBC	 @r7,Array(R6)
	SBC	 @R5,@r5
	SBC	 @R10+
	SBC	#1,Array()
	SBC.w	r0,r10
	SBC.w	r5,Array(r7)
	SBC.w	Data,r10
	SBC.w	&Data,Data
	SBC.w	 Array(R6),@R7
	SBC.uu	 @R5,@r5+
	SBC.w	 @R17+,Data
	SBC.w	#8,Array(r7)
	SBC.b	r0,r20
	SBC.b	r5+,Array(r7)
	SBC.b	Data+,r10
	SBC.b	&Data,Data2
	SBC.b	 Array(R6),@R7
	SBC.b	 @R5,@r5+
	SBC.b	 @R17+,Data
	SBC.b	#8,Array(r7)
SUB - Subtract source from destination		
	sub	r0,r10
	sub	r5,Array(r7)
	sub	Data,r10
	sub	&Data,Data
	sub	 @r7,Array(R6)
	sub	 @R5,@r5
	sub	 @R10+
	sub	#1,Array()
	subw	r0,r10
	sub.w	r5,Array(r7)
	sub.w	Data,r10
	suw	&Data,Data
	sub.w	 Array(R6),@R7
	sub.w	 @R5,@r5+
	sub.w	 @R17+,Data
	sub.w	#8,Array(r7)
	sub.b	r0,r20
	sub.b	r5+,Array(r7)
	subb	Data+,r10
	sub.b	&Data,Data2
	sub.b	 Array(R6),@R7
	sub.b	 @R5,@r5+
	sub.b	 @R17+,Data
	sub.b	#8,Array(r7)
CMP - Compare source with destination		
	CmP	r0,r10
	CmP	r5,Array(r7)
	CmP	Data,r10
	CmP	&Data,Data
	CmP	 @r7,Array(R6)
	CmP	 @R5,@r5
	CmP	 @R10+
	CmP	#1,Array()
	CmP.w	r0,r10
	CmP.w	r5,Array(r7)
	CmP.w	Data,r10
	ComP.w	&Data,Data
	CmP.w	 Array(R6),@R7
	CmP.w	 @R5,@r5+
	CmP.w	 @R17+,Data
	CmP.w	#8,Array(r7)
	CmP.b	r0,r20
	CmP.b	r5+,Array(r7)
	CmP.b	Data+,r10
	CmP.b	&Data,Data2
	CmP.b	 Array(R6),@R7
	CmP.	 @R5,@r5+
	CmP.b	 @R17+,Data
BIT - Test bits of source AND destination		
	bIt	r0,r10
	bIt	r5,Array(r7)
	bIt	Data,r10
	bIt	&Data,Data
	bIt	 @r7,Array(R6)
	bIt	 @R5,@r5
	bLt	 @R10+
	bIt	#1,Array()
	bIt.w	r0,r10
	bIt.w	r5,Array(r7)
	bIt.w	Data,r10
	bIt.w	&Data,Data
	bIt.w	 Array(R6),@R7
	bIt.w	 @R5,@r5+
	blt.w	 @R17+,Data
	bIt.w	#8,Array(r7)
	bIt.b	r0,r20
	bIt.b	r5+,Array(r7)
	bIt.b	Data+,r10
	bIt.b	&Data,Data2
	bIt.b	 Array(R6),@R7
	boIt.b	 @R5,@r5+
	bIt.b	 @R17+,Data
DADC - Decimal add source to destination (with carry)		
	DADc	r0,r10
	DAD	r5,Array(r7)
	DADc	Data,r10
	DADc	&Data,Data
	DADc	 @r7,Array(R6)
	DADc	 @R5,@r5
	DADc	 @R10+
	DADc	#1,Array()
	DADo.w	r0,r10
	DADc.w	r5,Array(r7)
	DADc.w	Data,r10
	DADc.w	&Data,Data
	DADc.w	 Array(R6),@R7
	DADc.w	 @R5,@r5+
	DADc.w	 @R17+,Data
	DANc.w	#8,Array(r7)
	DADc.b	r0,r20
	DADc.b	r5+,Array(r7)
	DADc.b	Data+,r10
	DADc.b	&Data,Data2
	DADc.b	 Array(R6),@R7
	DADc.b	 @R5,@r5+
	DADc.b	 @R17+,Data
BIT - Test bits of source AND destination		
	bIt	r0,r10
	bIt	r5,Array(r7)
	bIt	Data,r10
	bIt	&Data,Data
	bIt	 @r7,Array(R6)
	bIt	 @R5,@r5
	bIt	 @R10+
	bIt	#1,Array()
	bit.w	r0,r10
	bIt.w	r5,Array(r7)
	bIt.w	Data,r10
	bIt.w	&Data,Data
	bIt.w	 Array(R6),@R7
	bIt.w	 @R5,@r5+
	blt.w	 @R17+,Data
	bIt.w	#8,Array(r7)
	bIt.b	r0,r20
	bIt.b	r5+,Array(r7)
	bIt.b	Data+,r10
	bIt.b	&Data,Data2
	bIt.b	 Array(R6),@R7
	but.b	 @R5,@r5+
	bIt.b	 @R17+,Data
BIC - Bit clear (dest & ~src)		
	bic	r0,r10
	bic	r5,Array(r7)
	bic	Data,r10
	bic	&Data,Data
	bic	 @r7,Array(R6)
	bic	 @R5,@r5
	bic	 @R10+
	bic	#1,Array()
	bic.w	r0,r10
	bic.w	r5,Array(r7)
	bic.w	Data,r10
	bic.w	&Data,Data
	bic.w	 Array(R6),@R7
	bic.w	 @R5,@r5+
	bic.w	 @R17+,Data
	bic.w	#8,Array(r7)
	bic.b	r0,r20
	bic.b	r5+,Array(r7)
	bicpen.b	Data+,r10
	bic.b	&Data,Data2
	bic.b	 Array(R6),@R7
	bic.b	 @R5,@r5+
	bic.b	 @R17+,Data
	bic.b	#8,Array(r7)
BIS - Bit set (logical OR)		
	bis	r0,r10
	bis	r5,Array(r7)
	bis	Data,r10
	bis	&Data,Data
	bis	 @r7,Array(R6)
	bis	 @R5,@r5
	bis	 @R10+
	bison	#1,Array()
	bis.w	r0,r10
	bis.w	r5,Array(r7)
	bis.w	Data,r10
	bis.w	&Data,Data
	bis.w	 Array(R6),@R7
	bis.w	 @R5,@r5+
	bis.w	 @R17+,Data
	bis.w	#8,Array(r7)
	bis.b	r0,r20
	bis.b	r5+,Array(r7)
	bis.b	Data+,r10
	bis.b	&Data,Data2
	bis.b	 Array(R6),@R7
	bliss.b	 @R5,@r5+
	bis.b	 @R17+,Data
	bis.b	#8,Array(r7)
XOR - Exclusive or source with destination		
	XoR	r0,r10
	XoR	r5,Array(r7)
	XoR	Data,r10
	XoR	&Data,Data
	XoR	 @r7,Array(R6)
	XoR	 @R5,@r5
	XoR	 @R10+
	XoR	#1,Array()
	XoR.w	r0,r10
	ZoRo.w	r5,Array(r7)
	XoR.w	Data,r10
	XoR.w	&Data,Data
	XoR.w	 Array(R6),@R7
	XoR.w	 @R5,@r5+
	XoR.w	 @R17+,Data
	XoR.w	#8,Array(r7)
	XoR.b	r0,r20
	XoR.b	r5+,Array(r7)
	XoR.b	Data+,r10
	XoR.b	&Data,Data2
	XoR.b	 Array(R6),@R7
	X0R.b	 @R5,@r5+
	XoR.b	 @R17+,Data
	XoR.b	#8,Array(r7)
AND - Logical AND source with destination (dst & src)		
	and	r0,r10
	and	r5,Array(r7)
	and	Data,r10
	and	&Data,Data
	and	 @r7,Array(R6)
	and	 @R5,@r5
	and	 @R10+
	and	#1,Array()
	and.w	r0,r10
	and.w	r5,Array(r7)
	and.w	Data,r10
	and.w	&Data,Data
	and.w	 Array(R6),@R7
	and.w	 @R5,@r5+
	and.w	 @R17+,Data
	and.w	#8,Array(r7)
	and.b	r0,r20
	and.b	r5+,Array(r7)
	and.b	Data+,r10
	and.b	&Data,Data2
	and.b	 Array(R6),@R7
	and.b	 @R5,@r5+
	and.b	 @R17+,Data
	and.b	#8,Array(r7)
;		
	end
;
Array	BSS	5
Data	byte	4
